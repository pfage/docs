{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"go/config/","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u53d6","text":"<p>viper  \u53ef\u4ee5\u8bfb\u53d6\u5404\u79cd\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6</p> <p>yaml</p> <p>\u6848\u4f8b</p> <pre><code>package config\n\nimport (\n    \"togds/internal/model\"\n\n    \"github.com/spf13/viper\"\n)\n\n// var Cfg = viper.New()\n\nvar AppConfig model.Config\n\nfunc Init() {\n    viper.SetConfigName(\"config\")\n    viper.SetConfigType(\"yaml\")\n    viper.AddConfigPath(\"./configs\")\n    if err := viper.ReadInConfig(); err != nil {\n        panic(err)\n    }\n    if err := viper.Unmarshal(&amp;AppConfig); err != nil {\n        panic(err)\n    }\n}\nfunc GetGlobalConfig() model.Config {\n    return AppConfig\n}\n</code></pre> <p>\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86</p> <pre><code>    config.Init()\n    globalConfig := config.GetGlobalConfig()\n</code></pre>"},{"location":"go/mysql/","title":"\u8fde\u63a5mysql","text":""},{"location":"go/mysql/#_1","title":"\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf","text":"<p>global.go <pre><code>var (\n    DB *sql.DB\n)\n</code></pre></p>"},{"location":"go/mysql/#_2","title":"\u5b9a\u4e49\u521d\u59cb\u5316\u914d\u7f6e","text":"<pre><code>package db\n\nimport (\n    \"fmt\"\n    \"togds/pkg/config\"\n\n    \"gorm.io/driver/mysql\"\n    \"gorm.io/gorm\"\n)\n\n// \u5b9a\u4e49\u5168\u5c40\u7684db\u5bf9\u8c61\uff0c\u6211\u4eec\u6267\u884c\u6570\u636e\u5e93\u64cd\u4f5c\u4e3b\u8981\u901a\u8fc7\u4ed6\u5b9e\u73b0\u3002\nvar _db *gorm.DB\n\n// \u5305\u521d\u59cb\u5316\u51fd\u6570\uff0cgolang\u7279\u6027\uff0c\u6bcf\u4e2a\u5305\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u6267\u884cinit\u51fd\u6570\uff0c\u8fd9\u91cc\u7528\u6765\u521d\u59cb\u5316gorm\u3002\nfunc init() {\n    // globalConfig := config.GetGlobalConfig()\n\n    config.Init()\n    globalConfig := config.GetGlobalConfig()\n    dsn := fmt.Sprintf(\"%s:%s@tcp(%s:%d)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local\",\n        globalConfig.Mysql.User, globalConfig.Mysql.Password, globalConfig.Mysql.Host, globalConfig.Mysql.Port, globalConfig.Mysql.Database)\n    var err error\n    //\u8fde\u63a5MYSQL, \u83b7\u5f97DB\u7c7b\u578b\u5b9e\u4f8b\uff0c\u7528\u4e8e\u540e\u9762\u7684\u6570\u636e\u5e93\u8bfb\u5199\u64cd\u4f5c\u3002\n    _db, err = gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        panic(\"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25, error=\" + err.Error())\n    }\n\n    //\u83b7\u53d6\u901a\u7528\u6570\u636e\u5e93\u5bf9\u8c61 sql.DB \uff0c\u7136\u540e\u4f7f\u7528\u5176\u63d0\u4f9b\u7684\u529f\u80fd\n    sqlDB, _ := _db.DB()\n\n    //\u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u53c2\u6570\n    sqlDB.SetMaxOpenConns(100) //\u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u6700\u5927\u8fde\u63a5\u6570\n    sqlDB.SetMaxIdleConns(20)  //\u8fde\u63a5\u6c60\u6700\u5927\u5141\u8bb8\u7684\u7a7a\u95f2\u8fde\u63a5\u6570\uff0c\u5982\u679c\u6ca1\u6709sql\u4efb\u52a1\u9700\u8981\u6267\u884c\u7684\u8fde\u63a5\u6570\u5927\u4e8e20\uff0c\u8d85\u8fc7\u7684\u8fde\u63a5\u4f1a\u88ab\u8fde\u63a5\u6c60\u5173\u95ed\u3002\n}\n\n// \u83b7\u53d6gorm db\u5bf9\u8c61\uff0c\u5176\u4ed6\u5305\u9700\u8981\u6267\u884c\u6570\u636e\u5e93\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u53ea\u8981\u901a\u8fc7tools.getDB()\u83b7\u53d6db\u5bf9\u8c61\u5373\u53ef\u3002\n// \u4e0d\u7528\u62c5\u5fc3\u534f\u7a0b\u5e76\u53d1\u4f7f\u7528\u540c\u6837\u7684db\u5bf9\u8c61\u4f1a\u5171\u7528\u540c\u4e00\u4e2a\u8fde\u63a5\uff0cdb\u5bf9\u8c61\u5728\u8c03\u7528\u4ed6\u7684\u65b9\u6cd5\u7684\u65f6\u5019\u4f1a\u4ece\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e2d\u83b7\u53d6\u65b0\u7684\u8fde\u63a5\nfunc GetDB() *gorm.DB {\n    return _db\n}\n</code></pre> <p>\u6ce8\u610f\uff1ainit\u51fd\u6570\u4f1a\u5728main\u51fd\u6570\u4e4b\u524d\u6267\u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728init\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\u3002</p>"},{"location":"go/mysql/#model","title":"\u5b9a\u4e49model","text":"<pre><code>type User struct {\n    ID            int       `gorm:\"id\"`\n    Username      string    `gorm:\"type:varchar(20);not null\"`\n    Password      string    `gorm:\"type:varchar(20);not null\"`\n    Email         string    `gorm:\"type:varchar(20);not null\"`\n    Phone         string    `gorm:\"type:varchar(20);not null\"`\n    Createdata    time.Time `gorm:\"type:datetime;not null\"`\n    Changetime    time.Time `gorm:\"type:datetime;not null\"`\n    Delete_status int       `gorm:\"type:int;not null\"`\n    IS_active     int       `gorm:\"type:int;not null\"`\n}\n</code></pre>"},{"location":"go/mysql/#_3","title":"\u4f7f\u7528","text":"<pre><code>u := model.User{}\nglobal.DB.Debug().Where(\"username =?\", username).First(&amp;u)\n</code></pre>"},{"location":"go/redis/","title":"\u8fde\u63a5redis","text":""},{"location":"go/redis/#redis_1","title":"\u521d\u59cb\u5316redis","text":"<p>global.go</p> <pre><code>var (\n    // DB \u662f\u5168\u5c40\u7684\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61\n    DB    = db.GetDB()\n    Redis *redis.Client\n)\n</code></pre> <p>redis.go</p> <pre><code>package redis\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"time\"\n    \"togds/pkg/config\"\n\n    \"github.com/redis/go-redis/v9\"\n)\n\nvar redisClient *redis.Client\nvar ctx = context.Background()\n\n// \u8bbe\u7f6ereids\u503c\nfunc Set(key string, value string, time time.Duration) error {\n    err := redisClient.Set(ctx, key, value, time).Err()\n    if err != nil {\n        return err\n    }\n    return nil\n}\n\n// \u83b7\u53d6reids\u503c\nfunc Get(key string) (string, error) {\n    value, err := redisClient.Get(ctx, key).Result()\n    fmt.Println(\"00000\", key)\n    fmt.Println(\"1111\", value)\n    fmt.Println(\"2222\", err)\n    if err != nil {\n        return \"\", err\n    }\n    return value, err\n}\n\n// \u5220\u9664rediskey\nfunc Del(key string) error {\n    err := redisClient.Del(ctx, key).Err()\n    if err != nil {\n        return err\n    }\n    return nil\n}\n\nfunc RedisInit() {\n    globalConfig := config.GetGlobalConfig()\n    addr := fmt.Sprintf(\"%s:%d\", globalConfig.Redis.Host, globalConfig.Redis.Port)\n    client := redis.NewClient(&amp;redis.Options{\n        Addr:     addr,\n        Password: globalConfig.Redis.Password,\n        DB:       0,\n    })\n\n    timeout, goBack := context.WithTimeout(context.Background(), time.Second*3)\n    defer goBack()\n    _, err := client.Ping(timeout).Result()\n    if err != nil {\n        panic(\"redis\u521d\u59cb\u5316\u5931\u8d25! \" + err.Error())\n    }\n    fmt.Println(\"redis\u521d\u59cb\u5316\u6210\u529f!\")\n    redisClient = client\n}\n\nfunc Init() {\n    fmt.Println(\"redis\u521d\u59cb\u5316...\")\n    RedisInit()\n}\n</code></pre>"},{"location":"go/redis/#redis_2","title":"\u521d\u59cb\u5316redis","text":"<p>main.go</p> <pre><code>redis.Init()\n</code></pre>"},{"location":"go/redis/#_1","title":"\u4f7f\u7528","text":"<pre><code>redis.Set(key, username, 10*time.Minute)\n</code></pre>"},{"location":"go/swagger/","title":"swagger api \u63a5\u53e3\u6587\u6863","text":""},{"location":"go/swagger/#_1","title":"\u5b89\u88c5","text":"<pre><code>go get -u github.com/swaggo/swag/cmd/swag\ngo install github.com/swaggo/swag/cmd/swag@latest\n</code></pre>"},{"location":"go/swagger/#_2","title":"\u914d\u7f6e","text":"<p>main.go</p> <pre><code>import (\n        swaggerfiles \"github.com/swaggo/files\"\n    ginSwagger \"github.com/swaggo/gin-swagger\"\n)\n// \u8bbe\u7f6eswagger\u8bf7\u6c42\u9ed8\u8ba4\u8def\u7531\ndocs.SwaggerInfo.BasePath = \"/api/v1\"\n// \u8bbe\u7f6eswagger\u8def\u7531\nserver.GET(\"/swagger/*any\", ginSwagger.WrapHandler(swaggerfiles.Handler))\n</code></pre>"},{"location":"go/swagger/#_3","title":"\u63cf\u8ff0","text":"annotation description example title version description tag.name tag.description tag.docs.url tag.docs.description annotation description example title \u5fc5\u586b\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u6807\u9898 // @title Swagger Example API version api \u7248\u672c // @version 1.0 description \u63cf\u8ff0 // @description This is a sample server celler server. tag.name \u6807\u7b7e\u7684\u540d\u79f0 // @tag.name This is the name of the tag tag.description \u6807\u7b7e\u7684\u63cf\u8ff0 // @tag.description Cool Description tag.docs.url \u6807\u7b7e\u5916\u90e8\u6587\u6863\u7684 URL // @tag.docs.url https://example.com tag.docs.description \u6807\u7b7e\u5916\u90e8\u6587\u6863\u7684\u63cf\u8ff0 // @tag.docs.description Best example documentation termsOfService API \u7684\u670d\u52a1\u6761\u6b3e // @termsOfService http://swagger.io/terms/ contact.name \u516c\u5f00 API \u7684\u8054\u7cfb\u4fe1\u606f // @contact.name API Support contact.url \u6307\u5411\u8054\u7cfb\u4fe1\u606f\u7684 URL\u3002\u5fc5\u987b\u91c7\u7528 URL \u683c\u5f0f // @contact.url http://www.swagger.io/support contact.email \u8054\u7cfb\u90ae\u7bb1 // @contact.email support@swagger.io license.name \u5fc5\u586b\u9879\u3002API\u4f7f\u7528\u7684\u8bb8\u53ef\u8bc1\u540d\u79f0\u3002 // @license.name Apache 2.0 license.url API \u6240\u7528\u8bb8\u53ef\u8bc1\u7684 URL\u3002\u5fc5\u987b\u91c7\u7528 URL \u683c\u5f0f // @license.url http://www.apache.org/licenses/LICENSE-2.0.html host \u4e3a API \u63d0\u4f9b\u670d\u52a1\u7684\u4e3b\u673a // @host localhost:8080 BasePath \u63d0\u4f9b API \u7684\u57fa\u672c\u8def\u5f84\uff0c\u8fd9\u91cc\u53ea\u662f\u4e2a\u6ce8\u91ca // @BasePath /api/v1 accept \u63a5\u53d7\u7684\u8bf7\u6c42\u65b9\u5f0f // @accept json produce API \u53ef\u4ee5\u751f\u6210\u7684 MIME \u7c7b\u578b\u5217\u8868 // @produce json query.collection.format The default collection(array) param format in query,enums:csv,multi,pipes,tsv,ssv. If not set, csv is the default. // @query.collection.format multi schemes The transfer protocol for the operation that separated by spaces. // @schemes http https externalDocs.description \u5916\u90e8\u6587\u6863\u7684\u63cf\u8ff0 // @externalDocs.description OpenAPI externalDocs.url \u5916\u90e8\u6587\u6863\u7684 URL // @externalDocs.url https://swagger.io/resources/open-api/ x-name The extension key, must be start by x- and take only json value // @x-example-key {\"key\": \"value\"}"},{"location":"go/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/","title":"go \u65b0\u9879\u76ee\u73af\u5883\u642d\u5efa","text":""},{"location":"go/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/#1-go","title":"1. \u5b89\u88c5 go","text":""},{"location":"go/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/#2-go-mod","title":"2. \u5b89\u88c5 go mod","text":"<pre><code>go mod init hellomoudle  # \u521d\u59cb\u5316\u9879\u76ee\ngo mod tidy # \u4e0b\u8f7d\u4f9d\u8d56\n</code></pre> <p>\u6ce8\u610f</p> <ol> <li>go mod init \u5fc5\u987b\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c</li> </ol>"},{"location":"togds/","title":"\u6a21\u5757","text":""},{"location":"togds/#user","title":"user","text":""},{"location":"togds/#device","title":"device","text":""}]}